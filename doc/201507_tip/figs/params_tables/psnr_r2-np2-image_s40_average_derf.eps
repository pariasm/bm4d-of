%!PS-Adobe-3.0 EPSF-3.0
%%Creator: MATLAB, The MathWorks, Inc. Version 8.3.0.532 (R2014a). Operating System: Linux 3.16.0-41-generic #55~14.04.1-Ubuntu SMP Sun Jun 14 18:43:36 UTC 2015 x86_64.
%%Title: ./psnr_r2-np2-image_s40_average_derf.eps
%%CreationDate: 08/05/2015  13:39:15
%%DocumentNeededFonts: Helvetica
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox:    50   263   543   524
%%EndComments

%%BeginProlog
% MathWorks dictionary
/MathWorks 160 dict begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef
% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rm /rmoveto ldef
/rl /rlineto ldef
/s {show newpath} bdef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef
% orientation switch
/portraitMode 0 def /landscapeMode 1 def /rotateMode 2 def
% coordinate system mappings
/dpi2point 0 def
% font control
/FontSize 0 def
/FMS {/FontSize xstore findfont [FontSize 0 0 FontSize neg 0 0]
  makefont setfont} bdef
/reencode {exch dup where {pop load} {pop StandardEncoding} ifelse
  exch dup 3 1 roll findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def currentdict end definefont pop} bdef
/isroman {findfont /CharStrings get /Agrave known} bdef
/FMSR {3 1 roll 1 index dup isroman {reencode} {pop pop} ifelse
  exch FMS} bdef
/csm {1 dpi2point div -1 dpi2point div scale neg translate
 dup landscapeMode eq {pop -90 rotate}
  {rotateMode eq {90 rotate} if} ifelse} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4
  dpi2point mul] 0 setdash } bdef
% macros for lines and objects
/L {lineto stroke} bdef
/MP {3 1 roll moveto 1 sub {rlineto} repeat} bdef
/AP {{rlineto} repeat} bdef
/PDlw -1 def
/W {/PDlw currentlinewidth def setlinewidth} def
/PP {closepath eofill} bdef
/DP {closepath stroke} bdef
/MR {4 -2 roll moveto dup  0 exch rlineto exch 0 rlineto
  neg 0 exch rlineto closepath} bdef
/FR {MR stroke} bdef
/PR {MR fill} bdef
/L1i {{currentfile picstr readhexstring pop} image} bdef
/tMatrix matrix def
/MakeOval {newpath tMatrix currentmatrix pop translate scale
0 0 1 0 360 arc tMatrix setmatrix} bdef
/FO {MakeOval stroke} bdef
/PO {MakeOval fill} bdef
/PD {currentlinewidth 2 div 0 360 arc fill
   PDlw -1 eq not {PDlw w /PDlw -1 def} if} def
/FA {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arc tMatrix setmatrix stroke} bdef
/PA {newpath tMatrix currentmatrix pop	translate 0 0 moveto scale
  0 0 1 5 -2 roll arc closepath tMatrix setmatrix fill} bdef
/FAn {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arcn tMatrix setmatrix stroke} bdef
/PAn {newpath tMatrix currentmatrix pop translate 0 0 moveto scale
  0 0 1 5 -2 roll arcn closepath tMatrix setmatrix fill} bdef
/vradius 0 def /hradius 0 def /lry 0 def
/lrx 0 def /uly 0 def /ulx 0 def /rad 0 def
/MRR {/vradius xdef /hradius xdef /lry xdef /lrx xdef /uly xdef
  /ulx xdef newpath tMatrix currentmatrix pop ulx hradius add uly
  vradius add translate hradius vradius scale 0 0 1 180 270 arc 
  tMatrix setmatrix lrx hradius sub uly vradius add translate
  hradius vradius scale 0 0 1 270 360 arc tMatrix setmatrix
  lrx hradius sub lry vradius sub translate hradius vradius scale
  0 0 1 0 90 arc tMatrix setmatrix ulx hradius add lry vradius sub
  translate hradius vradius scale 0 0 1 90 180 arc tMatrix setmatrix
  closepath} bdef
/FRR {MRR stroke } bdef
/PRR {MRR fill } bdef
/MlrRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lry uly sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 90 270 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 270 90 arc tMatrix setmatrix
  closepath} bdef
/FlrRR {MlrRR stroke } bdef
/PlrRR {MlrRR fill } bdef
/MtbRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lrx ulx sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 180 360 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 0 180 arc tMatrix setmatrix
  closepath} bdef
/FtbRR {MtbRR stroke } bdef
/PtbRR {MtbRR fill } bdef
/stri 6 array def /dtri 6 array def
/smat 6 array def /dmat 6 array def
/tmat1 6 array def /tmat2 6 array def /dif 3 array def
/asub {/ind2 exch def /ind1 exch def dup dup
  ind1 get exch ind2 get sub exch } bdef
/tri_to_matrix {
  2 0 asub 3 1 asub 4 0 asub 5 1 asub
  dup 0 get exch 1 get 7 -1 roll astore } bdef
/compute_transform {
  dmat dtri tri_to_matrix tmat1 invertmatrix 
  smat stri tri_to_matrix tmat2 concatmatrix } bdef
/ds {stri astore pop} bdef
/dt {dtri astore pop} bdef
/db {2 copy /cols xdef /rows xdef mul dup 3 mul string
  currentfile 
  3 index 0 eq {/ASCIIHexDecode filter}
  {/ASCII85Decode filter 3 index 2 eq {/RunLengthDecode filter} if }
  ifelse exch readstring pop
  dup 0 3 index getinterval /rbmap xdef
  dup 2 index dup getinterval /gbmap xdef
  1 index dup 2 mul exch getinterval /bbmap xdef pop pop}bdef
/it {gs np dtri aload pop moveto lineto lineto cp c
  cols rows 8 compute_transform 
  rbmap gbmap bbmap true 3 colorimage gr}bdef
/il {newpath moveto lineto stroke}bdef
currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:    50   263   543   524
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 12 def
portraitMode 0216 7344 csm

  392  1048  5913  3133 rc
85 dict begin %Colortable dictionary
/c0 { 0.000000 0.000000 0.000000 sr} bdef
/c1 { 1.000000 1.000000 1.000000 sr} bdef
/c2 { 0.900000 0.000000 0.000000 sr} bdef
/c3 { 0.000000 0.820000 0.000000 sr} bdef
/c4 { 0.000000 0.000000 0.800000 sr} bdef
/c5 { 0.910000 0.820000 0.320000 sr} bdef
/c6 { 1.000000 0.260000 0.820000 sr} bdef
/c7 { 0.000000 0.820000 0.820000 sr} bdef
c0
1 j
1 sg
   0    0 6913 5186 rf
6 w
0 -2678 5356 0 0 2678 899 1163 4 MP
PP
-5356 0 0 -2678 5356 0 0 2678 899 1163 5 MP stroke
gs 899 1163 5357 2679 rc
/mwscm { [/Indexed /DeviceRGB 63
  <
    000000 040404 080808 0c0c0c 101010 141414 181818 1c1c1c 202020 242424 
    282828 2c2c2c 303030 343434 383838 3c3c3c 404040 444444 484848 4c4c4c 
    505050 555555 595959 5d5d5d 616161 656565 696969 6d6d6d 717171 757575 
    797979 7d7d7d 818181 858585 898989 8d8d8d 919191 959595 999999 9d9d9d 
    a1a1a1 a5a5a5 aaaaaa aeaeae b2b2b2 b6b6b6 bababa bebebe c2c2c2 c6c6c6 
    cacaca cecece d2d2d2 d6d6d6 dadada dedede e2e2e2 e6e6e6 eaeaea eeeeee 
    f2f2f2 f6f6f6 fafafa ffffff 
  >
] setcolorspace } bdef mwscm
gs np 899 1163 mt 0 2678 rl 5356 0 rl 0 -2678 rl cp c np
[5356 0 0 2678 899 1163] cc
<< % Image dictionary
  /ImageType 1
  /Width 8 /Height 4
  /BitsPerComponent 8
  /Decode [0 255]
  /ImageMatrix [8.000000 0 0 4.000000 0 0]
  /DataSource currentfile
  /ASCII85Decode filter
  /RunLengthDecode filter
>>
image
"$AIr0DtkR1d=/d48q8O,s"+K3B9&Y(c+'.2)R3IJ,
~>
gr
gr

0 sg
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 120 FMSR

3460 4129 mt 
(rank) s
 528 2610 mt  -90 rotate
(n) s
90 rotate
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 96 FMSR

 588 2544 mt  -90 rotate
(sim) s
90 rotate
4 w
DO
SO
6 w
 899 1163 mt 6255 1163 L
 899 3841 mt 6255 3841 L
 899 1163 mt  899 3841 L
6255 1163 mt 6255 3841 L
 899 3841 mt 6255 3841 L
 899 1163 mt  899 3841 L
1233 3841 mt 1233 3787 L
1233 1163 mt 1233 1216 L
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 120 FMSR

1167 3986 mt 
(10) s
1903 3841 mt 1903 3787 L
1903 1163 mt 1903 1216 L
1837 3986 mt 
(20) s
2572 3841 mt 2572 3787 L
2572 1163 mt 2572 1216 L
2506 3986 mt 
(30) s
3242 3841 mt 3242 3787 L
3242 1163 mt 3242 1216 L
3176 3986 mt 
(40) s
3911 3841 mt 3911 3787 L
3911 1163 mt 3911 1216 L
3845 3986 mt 
(50) s
4581 3841 mt 4581 3787 L
4581 1163 mt 4581 1216 L
4515 3986 mt 
(60) s
5250 3841 mt 5250 3787 L
5250 1163 mt 5250 1216 L
5184 3986 mt 
(70) s
5920 3841 mt 5920 3787 L
5920 1163 mt 5920 1216 L
5854 3986 mt 
(80) s
 899 1163 mt  952 1163 L
6255 1163 mt 6201 1163 L
 731 1207 mt 
(50) s
 899 1497 mt  952 1497 L
6255 1497 mt 6201 1497 L
 664 1541 mt 
(100) s
 899 1832 mt  952 1832 L
6255 1832 mt 6201 1832 L
 664 1876 mt 
(150) s
 899 2167 mt  952 2167 L
6255 2167 mt 6201 2167 L
 664 2211 mt 
(200) s
 899 2502 mt  952 2502 L
6255 2502 mt 6201 2502 L
 731 2546 mt 
(50) s
 899 2836 mt  952 2836 L
6255 2836 mt 6201 2836 L
 664 2880 mt 
(100) s
 899 3171 mt  952 3171 L
6255 3171 mt 6201 3171 L
 664 3215 mt 
(150) s
 899 3506 mt  952 3506 L
6255 3506 mt 6201 3506 L
 664 3550 mt 
(200) s
 899 3841 mt  952 3841 L
6255 3841 mt 6201 3841 L
 731 3885 mt 
(50) s
 899 1163 mt 6255 1163 L
 899 3841 mt 6255 3841 L
 899 1163 mt  899 3841 L
6255 1163 mt 6255 3841 L

end %%Color Dict

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%EOF
